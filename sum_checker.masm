org 100h
.model small
.stack 100h
.data
msg1 db 'Enter first number: $'
msg2 db 'Enter second number: $'
msg3 db 'Sum is less than 10 $'
msg4 db 'Sum invalid because greater than 10. Try Again! $'
newline db 10, 13, '$'
.code
main proc
    L3: 
    mov dx, offset newline
    mov ah, 9
    int 21h
   
    mov dx, offset msg1
    mov ah, 9
    int 21h

    mov dl, '?'
    mov ah, 2
    int 21h

    mov dl, 8
    mov ah, 2
    int 21h

    mov ah, 1
    int 21h
    sub al, 48         
    mov ah, 0
    mov bx, ax
    
    mov dx, offset newline
    mov ah, 9
    int 21h         

    mov dx, offset msg2
    mov ah, 9
    int 21h

    mov dl, '?'
    mov ah, 2
    int 21h

    mov dl, 8
    mov ah, 2
    int 21h

    mov ah, 1
    int 21h
    sub al, 48
    mov ah, 0
    mov cx, ax        
    
    add cx, bx
    cmp cx, 10
    JL L1 
    cmp cx, 10
    JGE L2
    
    L1: 
    mov dx, offset newline
    mov ah, 9
    int 21h
    
    mov dx, offset msg3
    mov ah, 9
    int 21h 
    JMP exit
    
    L2:
    mov dx, offset newline
    mov ah, 9
    int 21h
     
    mov dx, offset msg4
    mov ah, 9
    int 21h  
    JMP L3  
 exit:   
ret
main endp
end main
